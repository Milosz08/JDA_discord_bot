#
# Copyright (c) 2023 by MILOSZ GILGA <http://miloszgilga.pl>
#
# File name: libs.versions.toml
# Last modified: 23/02/2023, 16:59
# Project name: jwizard-discord-bot
#
# Licensed under the MIT license; you may not use this file except in compliance with the License.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# THE ABOVE COPYRIGHT NOTICE AND THIS PERMISSION NOTICE SHALL BE INCLUDED IN ALL COPIES OR
# SUBSTANTIAL PORTIONS OF THE SOFTWARE.
#
# The software is provided "as is", without warranty of any kind, express or implied, including but not limited
# to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event
# shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an
# action of contract, tort or otherwise, arising from, out of or in connection with the software or the use
# or other dealings in the software.
#

# libs.versions.toml
# refer to build.gradle 3rd part libraries script file

[versions]
jda                 = '4.4.1_353'
lavaPlayer          = '1.4.0'
jdaUtilities        = '1.24.1'

h2Driver            = '2.1.214'
mysqlDriver         = '8.0.31'
liquibase           = '4.19.0'

lombok              = '1.18.26'
jUnit               = '5.8.1'
springBoot          = '3.0.2'
springVault         = '3.0.0'
snakeYaml           = '1.33'
commonsText         = '1.10.0'
commonsValidator    = '1.7'
dotEnv              = '5.2.2'
reflections         = '0.10.2'
apacheHttpClient    = '4.5.14'
jmpsl               = '1.0.2_03'
jjwt                = '0.11.5'
ehCache             = '3.10.8'
jaxb                = '2.3.1'

springBootDep       = '1.0.15.RELEASE'

[libraries]
jda                                 = { module = 'net.dv8tion:JDA',                                             version.ref = 'jda' }
lavaplayer                          = { module = 'com.github.walkyst:lavaplayer-fork',                          version.ref = 'lavaPlayer' }
jdautilities                        = { module = 'pw.chew:jda-chewtils',                                        version.ref = 'jdaUtilities' }

h2-driver                           = { module = 'com.h2database:h2',                                           version.ref = 'h2Driver' }
mysql-driver                        = { module = 'mysql:mysql-connector-java',                                  version.ref = 'mysqlDriver' }
liquibase                           = { module = 'org.liquibase:liquibase-core',                                version.ref = 'liquibase' }

spring-boot-starter                 = { module = 'org.springframework.boot:spring-boot-starter',                version.ref = 'springBoot' }
spring-boot-devtools                = { module = 'org.springframework.boot:spring-boot-devtools',               version.ref = 'springBoot' }
spring-boot-starter-web             = { module = 'org.springframework.boot:spring-boot-starter-web',            version.ref = 'springBoot' }
spring-boot-starter-cache           = { module = 'org.springframework.boot:spring-boot-starter-cache',          version.ref = 'springBoot' }
spring-boot-starter-test            = { module = 'org.springframework.boot:spring-boot-starter-test',           version.ref = 'springBoot' }
spring-boot-starter-data-jpa        = { module = 'org.springframework.boot:spring-boot-starter-data-jpa',       version.ref = 'springBoot' }
spring-boot-starter-security        = { module = 'org.springframework.boot:spring-boot-starter-security',       version.ref = 'springBoot' }
spring-boot-starter-validation      = { module = 'org.springframework.boot:spring-boot-starter-validation',     version.ref = 'springBoot' }

#jmpsl-core                          = { module = 'pl.miloszgilga.jmpsl:jmpsl-core',                             version.ref = 'jmpsl' }
jmpsl-core                          = { module = 'pl.miloszgilga:jmpsl-core',                                   version.ref = 'jmpsl' }
jmpsl-security                      = { module = 'pl.miloszgilga:jmpsl-security',                               version.ref = 'jmpsl' }

lombok                              = { module = 'org.projectlombok:lombok',                                    version.ref = 'lombok' }
spring-vault                        = { module = 'org.springframework.vault:spring-vault-core',                 version.ref = 'springVault' }
snakeyaml                           = { module = 'org.yaml:snakeyaml',                                          version.ref = 'snakeYaml' }
commons-text                        = { module = 'org.apache.commons:commons-text',                             version.ref = 'commonsText' }
commons-validator                   = { module = 'commons-validator:commons-validator',                         version.ref = 'commonsValidator' }
dotenv                              = { module = 'io.github.cdimascio:java-dotenv',                             version.ref = 'dotEnv' }
reflections                         = { module = 'org.reflections:reflections',                                 version.ref = 'reflections' }
apache-httpclient                   = { module = 'org.apache.httpcomponents:httpclient',                        version.ref = 'apacheHttpClient' }
junit-api                           = { module = 'org.junit.jupiter:junit-jupiter-api',                         version.ref = 'jUnit' }
junit-engine                        = { module = 'org.junit.jupiter:junit-jupiter-engine',                      version.ref = 'jUnit' }
jjwt-api                            = { module = 'io.jsonwebtoken:jjwt-api',                                    version.ref = 'jjwt' }
jjwt-impl                           = { module = 'io.jsonwebtoken:jjwt-impl',                                   version.ref = 'jjwt' }
jjwt-jackson                        = { module = 'io.jsonwebtoken:jjwt-jackson',                                version.ref = 'jjwt' }
ehcache                             = { module = 'org.ehcache:ehcache',                                         version.ref = 'ehCache' }
jaxb-api                            = { module = 'javax.xml.bind:jaxb-api',                                     version.ref = 'jaxb' }
jaxb-impl                           = { module = 'com.sun.xml.bind:jaxb-impl',                                  version.ref = 'jaxb' }

[plugins]
spring-boot-plugin                  = { id     = 'org.springframework.boot',                                    version.ref = 'springBoot' }
spring-dept-plugin                  = { id     = 'io.spring.dependency-management',                             version.ref = 'springBootDep' }
